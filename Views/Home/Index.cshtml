@using Azure.AI.Vision.ImageAnalysis

<form asp-action="AnalyzeImage" asp-controller="Home" method="post" enctype="multipart/form-data">
    <div style="margin-bottom: 20px;">
        <label style="display: block; font-size: 24px; margin-bottom: 20px">Selecciona una imagen o toma una foto:</label>
        <button type="button" onclick="takePicture()" style="background-color: #007bff; color: #fff; border: none; padding: 10px 20px; font-size: 16px; cursor: pointer;">Tomar Foto</button>
        <!-- Input oculto para enviar la imagen al servidor -->
        <input type="hidden" name="CapturedImage" id="capturedImage" />
        <input type="file" id="image" name="File" accept="image/*" onchange="previewImage(event)">
    </div>
    <div style="margin-bottom: 20px;">
        <video id="video" width="400" height="300" autoplay style="margin-bottom: 10px;"></video>
    </div>
    <img id="preview" src="#" alt="Vista previa de la imagen" style="display: none; max-width: 100%; max-height: 300px; margin-bottom: 20px">
    <button type="submit" style="background-color: #007bff; color: #fff; border: none; padding: 10px 20px; font-size: 16px; cursor: pointer;">Analizar Imagen</button>
</form>

@if (Model != null)
{
    <div class="analysis-results">
        <h4 class="results-header">Resultados del análisis de imagen:</h4>
        <label for="direccion">Dirección:</label>
        <input type="text" id="direccion" value="@Model.Direccion" name="Direccion" style="width: 100%; margin-bottom: 10px;" />

        <label for="cliente">Telefono:</label>
        <input type="text" id="cliente" value="@Model.Cliente" name="Cliente" style="width: 100%; margin-bottom: 10px;" />

        <label for="importe">Total:</label>
        <input type="text" id="importe" value="@Model.Importe" name="Importe" style="width: 100%; margin-bottom: 10px;" />
    </div>
}

@* @if (Model != null && Model.Read != null)
{
    <div class="analysis-results">
        <h4 class="results-header">Resultados del análisis de imagen:</h4>
        @foreach (var line in GetAnalysisResult(Model))
        {
            <input type="text" value="@line" style="width: 100%; margin-bottom: 10px;" />
        }
    </div>
}

@functions {
    public List<string> GetAnalysisResult(ImageAnalysisResult result)
    {
        var analysisResult = new List<string>();

        foreach (var block in result.Read.Blocks)
        {
            foreach (var line in block.Lines)
            {
                analysisResult.Add(line.Text);
            }
        }
        return analysisResult;
    }
} *@

@* @if (Model != null && Model.Read != null)
{
    <div class="analysis-results">
        <h4 class="results-header">Resultados del análisis de imagen:</h4>
        <textarea rows="10" cols="50" readonly>@GetAnalysisResult(Model)</textarea>
    </div>
}

@functions {
    public string GetAnalysisResult(ImageAnalysisResult result)
    {
        var analysisResult = new System.Text.StringBuilder();

        analysisResult.AppendLine("Lectura:");
        foreach (var block in result.Read.Blocks)
        {
            foreach (var line in block.Lines)
            {
                analysisResult.AppendLine($"   Line: '{line.Text}'");
            }
        }
        return analysisResult.ToString();
    }
} *@

<script>
    // Obtener el video y la vista previa de la imagen
    const video = document.getElementById('video');
    const preview = document.getElementById('preview');

    // Obtener el contexto del canvas
    const canvas = document.createElement('canvas');
    const context = canvas.getContext('2d');

    // Función para tomar una foto
    function takePicture() {
        // Capturar el fotograma actual del video
        context.drawImage(video, 0, 0, canvas.width, canvas.height);

        // Obtener la imagen como base64
        const imageData = canvas.toDataURL('image/jpeg');

        // Mostrar la imagen en la vista previa
        preview.src = imageData;
        preview.style.display = 'block';

        // Asignar la imagen base64 al campo de entrada oculto
        document.getElementById('capturedImage').value = imageData;

        document.getElementById('image').value = '';
    }

    // Obtener acceso a la cámara
    navigator.mediaDevices.getUserMedia({ video: true })
        .then(stream => {
            video.srcObject = stream;
        })
        .catch(err => {
            console.error('Error al acceder a la cámara: ', err);
        });

    function previewImage(event) {
        var input = event.target;
        var reader = new FileReader();
        reader.onload = function () {
            var preview = document.getElementById('preview');
            preview.src = reader.result;
            preview.style.display = 'block';

            document.getElementById('capturedImage').value = '';
        };

        reader.readAsDataURL(input.files[0]);
    }
</script>
